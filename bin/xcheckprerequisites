#!/bin/bash
#
# ... this script will check for prerequisites for code4Rice3K


function check_prereq() {
        echo "Checking for required software"
        error=""
        samtools --help >/dev/null 2>&1 || (echo "could not find samtools, please install" >&2 && error="true")
        bcftools --help >/dev/null 2>&1 || (echo "could not find bcftools, please install" >&2 && error="true")
        vcftools --help >/dev/null 2>&1 || (echo "could not find vcftools, please install" >&2 && error="true")
        java -version >/dev/null 2>&1 || (echo "could not find Java, please install" >&2 && error="true")
        python --version >/dev/null 2>&1 || (echo "could not find Python 2.7, please install" >&2 && error="true")
        raxmlHPC-PTHREADS -h >/dev/null 2>&1 || (echo "could not find raxml, please install" >&2 && error="true")
        # Tabix exits with error even if installed, so it needs a fancier test
        set +e #Temporarily disable strict error mode
        tabix --help >/dev/null 2>&1
        if [[ "$?" != "1" ]]; then #If tabix is not installed the error status should be 127
                echo "could not find tabix, please install" >&2
                error="true"
        fi
	echo "Softwares are installed"
        set -e

        # Check for biopython and pyvcf:
        for module in vcf Bio; do
                echo -n "Python module $module ... "
                python -c "import $module" > /dev/null 2>&1
                returnstatus=$?
                if [ $returnstatus == "0" ]; then
                        echo OK
                else
                    	echo "Please install biopython and pyvcf"
                fi
        done

	if [[ -n "$error" ]]; then
                echo "Please install required software" >&2
                exit 1
        fi

        # check reference genome
        if [[ ! -e ${installdir}/../reference/IRGSP-1.0_genome.dict ]]; then
                echo "Reference genome not found in standard directory ${installdir}/../reference."
		echo "Check whether you should still run xsetupReference or specify a non-standard"
		echo "location with the -r option when running generatevcf." >&2
                exit 1
        fi

	echo "Requirements are met."
}

installdir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

check_prereq
